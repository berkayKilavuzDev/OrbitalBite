{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// ðŸ›’ KullanÄ±cÄ±nÄ±n sipariÅŸ geÃ§miÅŸini API'den al\nexport const fetchOrderHistory = createAsyncThunk('orders/fetchHistory', async () => {\n  const response = await fetch('/api/order-history/');\n  return response.json();\n});\n\n// âœ… Yeni sipariÅŸ oluÅŸturma\nexport const submitOrder = createAsyncThunk('orders/submitOrder', async (orderData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/api/order/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Order submission failed.');\n    }\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst orderSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    history: [],\n    // ðŸ“Œ SipariÅŸ geÃ§miÅŸi\n    lastOrder: null,\n    // ðŸ†• En son oluÅŸturulan sipariÅŸ\n    status: 'idle',\n    // idle | loading | succeeded | failed\n    error: null\n  },\n  reducers: {\n    clearLastOrder: state => {\n      state.lastOrder = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // ðŸ“Œ SipariÅŸ geÃ§miÅŸini al\n    .addCase(fetchOrderHistory.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchOrderHistory.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.history = action.payload;\n    }).addCase(fetchOrderHistory.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    })\n\n    // âœ… SipariÅŸ oluÅŸturma iÅŸlemi\n    .addCase(submitOrder.pending, state => {\n      state.status = 'loading';\n    }).addCase(submitOrder.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.lastOrder = action.payload; // ðŸ†• En son sipariÅŸi sakla\n    }).addCase(submitOrder.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearLastOrder\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchOrderHistory","response","fetch","json","submitOrder","orderData","rejectWithValue","method","headers","body","JSON","stringify","data","ok","Error","message","error","orderSlice","name","initialState","history","lastOrder","status","reducers","clearLastOrder","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/nazli/Desktop/Business/orbital/frontend/src/redux/slices/orderSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// ðŸ›’ KullanÄ±cÄ±nÄ±n sipariÅŸ geÃ§miÅŸini API'den al\r\nexport const fetchOrderHistory = createAsyncThunk('orders/fetchHistory', async () => {\r\n  const response = await fetch('/api/order-history/');\r\n  return response.json();\r\n});\r\n\r\n// âœ… Yeni sipariÅŸ oluÅŸturma\r\nexport const submitOrder = createAsyncThunk('orders/submitOrder', async (orderData, { rejectWithValue }) => {\r\n  try {\r\n    const response = await fetch('/api/order/', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Order submission failed.');\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nconst orderSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    history: [],      // ðŸ“Œ SipariÅŸ geÃ§miÅŸi\r\n    lastOrder: null,  // ðŸ†• En son oluÅŸturulan sipariÅŸ\r\n    status: 'idle',   // idle | loading | succeeded | failed\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    clearLastOrder: (state) => {\r\n      state.lastOrder = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // ðŸ“Œ SipariÅŸ geÃ§miÅŸini al\r\n      .addCase(fetchOrderHistory.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchOrderHistory.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.history = action.payload;\r\n      })\r\n      .addCase(fetchOrderHistory.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // âœ… SipariÅŸ oluÅŸturma iÅŸlemi\r\n      .addCase(submitOrder.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(submitOrder.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.lastOrder = action.payload; // ðŸ†• En son sipariÅŸi sakla\r\n      })\r\n      .addCase(submitOrder.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearLastOrder } = orderSlice.actions;\r\nexport default orderSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,iBAAiB,GAAGD,gBAAgB,CAAC,qBAAqB,EAAE,YAAY;EACnF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,CAAC;EACnD,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAGL,gBAAgB,CAAC,oBAAoB,EAAE,OAAOM,SAAS,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAC1G,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAC1CK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,SAAS;IAChC,CAAC,CAAC;IAEF,MAAMO,IAAI,GAAG,MAAMX,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,IAAI,CAACF,QAAQ,CAACY,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACG,OAAO,IAAI,0BAA0B,CAAC;IAC7D;IACA,OAAOH,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOV,eAAe,CAACU,KAAK,CAACD,OAAO,CAAC;EACvC;AACF,CAAC,CAAC;AAEF,MAAME,UAAU,GAAGnB,WAAW,CAAC;EAC7BoB,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IAAO;IAClBC,SAAS,EAAE,IAAI;IAAG;IAClBC,MAAM,EAAE,MAAM;IAAI;IAClBN,KAAK,EAAE;EACT,CAAC;EACDO,QAAQ,EAAE;IACRC,cAAc,EAAGC,KAAK,IAAK;MACzBA,KAAK,CAACJ,SAAS,GAAG,IAAI;IACxB;EACF,CAAC;EACDK,aAAa,EAAGC,OAAO,IAAK;IAC1BA;IACE;IAAA,CACCC,OAAO,CAAC5B,iBAAiB,CAAC6B,OAAO,EAAGJ,KAAK,IAAK;MAC7CA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDM,OAAO,CAAC5B,iBAAiB,CAAC8B,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACvDN,KAAK,CAACH,MAAM,GAAG,WAAW;MAC1BG,KAAK,CAACL,OAAO,GAAGW,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDJ,OAAO,CAAC5B,iBAAiB,CAACiC,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACtDN,KAAK,CAACH,MAAM,GAAG,QAAQ;MACvBG,KAAK,CAACT,KAAK,GAAGe,MAAM,CAACf,KAAK,CAACD,OAAO;IACpC,CAAC;;IAED;IAAA,CACCa,OAAO,CAACxB,WAAW,CAACyB,OAAO,EAAGJ,KAAK,IAAK;MACvCA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDM,OAAO,CAACxB,WAAW,CAAC0B,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACH,MAAM,GAAG,WAAW;MAC1BG,KAAK,CAACJ,SAAS,GAAGU,MAAM,CAACC,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC,CACDJ,OAAO,CAACxB,WAAW,CAAC6B,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAChDN,KAAK,CAACH,MAAM,GAAG,QAAQ;MACvBG,KAAK,CAACT,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAe,CAAC,GAAGP,UAAU,CAACiB,OAAO;AACpD,eAAejB,UAAU,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}