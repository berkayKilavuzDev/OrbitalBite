{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// API'den sepeti çek\nexport const fetchBasket = createAsyncThunk(\"cart/fetchBasket\", async () => {\n  const response = await fetch(\"/api/basket/\");\n  return response.json();\n});\nconst initialState = {\n  items: [],\n  totalPrice: 0,\n  status: \"idle\",\n  error: null,\n  editingItem: null\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const {\n        id,\n        name,\n        basePrice,\n        finalPrice,\n        options,\n        optionDetails,\n        size,\n        quantity\n      } = action.payload;\n\n      // Aynı ürün + seçenekler sepette varsa, sadece miktarı artır\n      const existingItem = state.items.find(item => item.id === id && item.size === size && JSON.stringify(item.options) === JSON.stringify(options) && JSON.stringify(item.optionDetails) === JSON.stringify(optionDetails));\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({\n          id,\n          name,\n          basePrice,\n          finalPrice,\n          options,\n          optionDetails,\n          size,\n          quantity\n        });\n      }\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\n    },\n    removeItem: (state, action) => {\n      state.items = state.items.filter(item => item.id !== action.payload);\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\n    },\n    updateItem: (state, action) => {\n      const {\n        id,\n        newOptions,\n        newOptionDetails,\n        newSize,\n        newQuantity\n      } = action.payload;\n      const itemToUpdate = state.items.find(item => item.id === id);\n      if (itemToUpdate) {\n        itemToUpdate.options = newOptions;\n        itemToUpdate.optionDetails = newOptionDetails;\n        itemToUpdate.size = newSize;\n        itemToUpdate.quantity = newQuantity;\n        itemToUpdate.finalPrice = (parseFloat(itemToUpdate.basePrice) + newOptionDetails.reduce((sum, detail) => sum + parseFloat(detail.price || 0), 0)).toFixed(2);\n      }\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\n    },\n    increaseQuantity: (state, action) => {\n      const item = state.items.find(item => item.id === action.payload);\n      if (item) item.quantity += 1;\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\n    },\n    decreaseQuantity: (state, action) => {\n      const item = state.items.find(item => item.id === action.payload);\n      if (item && item.quantity > 1) item.quantity -= 1;\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\n    },\n    setEditingItem: (state, action) => {\n      state.editingItem = action.payload;\n    },\n    clearCart: state => {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchBasket.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchBasket.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.items = action.payload.items;\n      state.totalPrice = action.payload.checkout_price;\n    }).addCase(fetchBasket.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  updateItem,\n  increaseQuantity,\n  decreaseQuantity,\n  setEditingItem,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchBasket","response","fetch","json","initialState","items","totalPrice","status","error","editingItem","cartSlice","name","reducers","addItem","state","action","id","basePrice","finalPrice","options","optionDetails","size","quantity","payload","existingItem","find","item","JSON","stringify","push","reduce","total","parseFloat","removeItem","filter","updateItem","newOptions","newOptionDetails","newSize","newQuantity","itemToUpdate","sum","detail","price","toFixed","increaseQuantity","decreaseQuantity","setEditingItem","clearCart","extraReducers","builder","addCase","pending","fulfilled","checkout_price","rejected","message","actions","reducer"],"sources":["C:/Users/nazli/Desktop/Business/orbital/frontend/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// API'den sepeti çek\r\nexport const fetchBasket = createAsyncThunk(\"cart/fetchBasket\", async () => {\r\n  const response = await fetch(\"/api/basket/\");\r\n  return response.json();\r\n});\r\n\r\nconst initialState = {\r\n  items: [],\r\n  totalPrice: 0,\r\n  status: \"idle\",\r\n  error: null,\r\n  editingItem: null,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      const { id, name, basePrice, finalPrice, options, optionDetails, size, quantity } = action.payload;\r\n\r\n      // Aynı ürün + seçenekler sepette varsa, sadece miktarı artır\r\n      const existingItem = state.items.find(\r\n        (item) =>\r\n          item.id === id &&\r\n          item.size === size &&\r\n          JSON.stringify(item.options) === JSON.stringify(options) &&\r\n          JSON.stringify(item.optionDetails) === JSON.stringify(optionDetails)\r\n      );\r\n\r\n      if (existingItem) {\r\n        existingItem.quantity += quantity;\r\n      } else {\r\n        state.items.push({ id, name, basePrice, finalPrice, options, optionDetails, size, quantity });\r\n      }\r\n\r\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\r\n    },\r\n\r\n    removeItem: (state, action) => {\r\n      state.items = state.items.filter((item) => item.id !== action.payload);\r\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\r\n    },\r\n\r\n    updateItem: (state, action) => {\r\n      const { id, newOptions, newOptionDetails, newSize, newQuantity } = action.payload;\r\n      const itemToUpdate = state.items.find((item) => item.id === id);\r\n      if (itemToUpdate) {\r\n        itemToUpdate.options = newOptions;\r\n        itemToUpdate.optionDetails = newOptionDetails;\r\n        itemToUpdate.size = newSize;\r\n        itemToUpdate.quantity = newQuantity;\r\n        itemToUpdate.finalPrice = (parseFloat(itemToUpdate.basePrice) + \r\n            newOptionDetails.reduce((sum, detail) => sum + parseFloat(detail.price || 0), 0)).toFixed(2);\r\n      }\r\n\r\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\r\n    },\r\n\r\n    increaseQuantity: (state, action) => {\r\n      const item = state.items.find((item) => item.id === action.payload);\r\n      if (item) item.quantity += 1;\r\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\r\n    },\r\n\r\n    decreaseQuantity: (state, action) => {\r\n      const item = state.items.find((item) => item.id === action.payload);\r\n      if (item && item.quantity > 1) item.quantity -= 1;\r\n      state.totalPrice = state.items.reduce((total, item) => total + parseFloat(item.finalPrice) * item.quantity, 0);\r\n    },\r\n\r\n    setEditingItem: (state, action) => {\r\n      state.editingItem = action.payload;\r\n    },\r\n\r\n    clearCart: (state) => {\r\n      state.items = [];\r\n      state.totalPrice = 0;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchBasket.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchBasket.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.items = action.payload.items;\r\n        state.totalPrice = action.payload.checkout_price;\r\n      })\r\n      .addCase(fetchBasket.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  addItem,\r\n  removeItem,\r\n  updateItem,\r\n  increaseQuantity,\r\n  decreaseQuantity,\r\n  setEditingItem,\r\n  clearCart,\r\n} = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,WAAW,GAAGD,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAC1E,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;EAC5C,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,CAAC;EACbC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAM;QAAEC,EAAE;QAAEL,IAAI;QAAEM,SAAS;QAAEC,UAAU;QAAEC,OAAO;QAAEC,aAAa;QAAEC,IAAI;QAAEC;MAAS,CAAC,GAAGP,MAAM,CAACQ,OAAO;;MAElG;MACA,MAAMC,YAAY,GAAGV,KAAK,CAACT,KAAK,CAACoB,IAAI,CAClCC,IAAI,IACHA,IAAI,CAACV,EAAE,KAAKA,EAAE,IACdU,IAAI,CAACL,IAAI,KAAKA,IAAI,IAClBM,IAAI,CAACC,SAAS,CAACF,IAAI,CAACP,OAAO,CAAC,KAAKQ,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,IACxDQ,IAAI,CAACC,SAAS,CAACF,IAAI,CAACN,aAAa,CAAC,KAAKO,IAAI,CAACC,SAAS,CAACR,aAAa,CACvE,CAAC;MAED,IAAII,YAAY,EAAE;QAChBA,YAAY,CAACF,QAAQ,IAAIA,QAAQ;MACnC,CAAC,MAAM;QACLR,KAAK,CAACT,KAAK,CAACwB,IAAI,CAAC;UAAEb,EAAE;UAAEL,IAAI;UAAEM,SAAS;UAAEC,UAAU;UAAEC,OAAO;UAAEC,aAAa;UAAEC,IAAI;UAAEC;QAAS,CAAC,CAAC;MAC/F;MAEAR,KAAK,CAACR,UAAU,GAAGQ,KAAK,CAACT,KAAK,CAACyB,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGC,UAAU,CAACN,IAAI,CAACR,UAAU,CAAC,GAAGQ,IAAI,CAACJ,QAAQ,EAAE,CAAC,CAAC;IAChH,CAAC;IAEDW,UAAU,EAAEA,CAACnB,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACT,KAAK,GAAGS,KAAK,CAACT,KAAK,CAAC6B,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKD,MAAM,CAACQ,OAAO,CAAC;MACtET,KAAK,CAACR,UAAU,GAAGQ,KAAK,CAACT,KAAK,CAACyB,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGC,UAAU,CAACN,IAAI,CAACR,UAAU,CAAC,GAAGQ,IAAI,CAACJ,QAAQ,EAAE,CAAC,CAAC;IAChH,CAAC;IAEDa,UAAU,EAAEA,CAACrB,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEC,EAAE;QAAEoB,UAAU;QAAEC,gBAAgB;QAAEC,OAAO;QAAEC;MAAY,CAAC,GAAGxB,MAAM,CAACQ,OAAO;MACjF,MAAMiB,YAAY,GAAG1B,KAAK,CAACT,KAAK,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC;MAC/D,IAAIwB,YAAY,EAAE;QAChBA,YAAY,CAACrB,OAAO,GAAGiB,UAAU;QACjCI,YAAY,CAACpB,aAAa,GAAGiB,gBAAgB;QAC7CG,YAAY,CAACnB,IAAI,GAAGiB,OAAO;QAC3BE,YAAY,CAAClB,QAAQ,GAAGiB,WAAW;QACnCC,YAAY,CAACtB,UAAU,GAAG,CAACc,UAAU,CAACQ,YAAY,CAACvB,SAAS,CAAC,GACzDoB,gBAAgB,CAACP,MAAM,CAAC,CAACW,GAAG,EAAEC,MAAM,KAAKD,GAAG,GAAGT,UAAU,CAACU,MAAM,CAACC,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC;MAClG;MAEA9B,KAAK,CAACR,UAAU,GAAGQ,KAAK,CAACT,KAAK,CAACyB,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGC,UAAU,CAACN,IAAI,CAACR,UAAU,CAAC,GAAGQ,IAAI,CAACJ,QAAQ,EAAE,CAAC,CAAC;IAChH,CAAC;IAEDuB,gBAAgB,EAAEA,CAAC/B,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAMW,IAAI,GAAGZ,KAAK,CAACT,KAAK,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKD,MAAM,CAACQ,OAAO,CAAC;MACnE,IAAIG,IAAI,EAAEA,IAAI,CAACJ,QAAQ,IAAI,CAAC;MAC5BR,KAAK,CAACR,UAAU,GAAGQ,KAAK,CAACT,KAAK,CAACyB,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGC,UAAU,CAACN,IAAI,CAACR,UAAU,CAAC,GAAGQ,IAAI,CAACJ,QAAQ,EAAE,CAAC,CAAC;IAChH,CAAC;IAEDwB,gBAAgB,EAAEA,CAAChC,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAMW,IAAI,GAAGZ,KAAK,CAACT,KAAK,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKD,MAAM,CAACQ,OAAO,CAAC;MACnE,IAAIG,IAAI,IAAIA,IAAI,CAACJ,QAAQ,GAAG,CAAC,EAAEI,IAAI,CAACJ,QAAQ,IAAI,CAAC;MACjDR,KAAK,CAACR,UAAU,GAAGQ,KAAK,CAACT,KAAK,CAACyB,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGC,UAAU,CAACN,IAAI,CAACR,UAAU,CAAC,GAAGQ,IAAI,CAACJ,QAAQ,EAAE,CAAC,CAAC;IAChH,CAAC;IAEDyB,cAAc,EAAEA,CAACjC,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACL,WAAW,GAAGM,MAAM,CAACQ,OAAO;IACpC,CAAC;IAEDyB,SAAS,EAAGlC,KAAK,IAAK;MACpBA,KAAK,CAACT,KAAK,GAAG,EAAE;MAChBS,KAAK,CAACR,UAAU,GAAG,CAAC;IACtB;EACF,CAAC;EAED2C,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnD,WAAW,CAACoD,OAAO,EAAGtC,KAAK,IAAK;MACvCA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACD4C,OAAO,CAACnD,WAAW,CAACqD,SAAS,EAAE,CAACvC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACQ,OAAO,CAAClB,KAAK;MAClCS,KAAK,CAACR,UAAU,GAAGS,MAAM,CAACQ,OAAO,CAAC+B,cAAc;IAClD,CAAC,CAAC,CACDH,OAAO,CAACnD,WAAW,CAACuD,QAAQ,EAAE,CAACzC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACP,KAAK,CAACgD,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACX3C,OAAO;EACPoB,UAAU;EACVE,UAAU;EACVU,gBAAgB;EAChBC,gBAAgB;EAChBC,cAAc;EACdC;AACF,CAAC,GAAGtC,SAAS,CAAC+C,OAAO;AAErB,eAAe/C,SAAS,CAACgD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}